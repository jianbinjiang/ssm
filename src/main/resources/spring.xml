<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.2.xsd
			http://www.springframework.org/schema/cache
			http://www.springframework.org/schema/cache/spring-cache-4.2.xsd">
    <!-- spring可以自动去扫描base-package下面或者子包下面的java文件，
   	如果扫描到有@Component @Controller@Service等这些注解的类，则把这些类注册为bean -->
	<context:component-scan base-package="com.hk.integralMall">
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController" />
	</context:component-scan>
	
	<!--引入配置属性文件 -->
	<context:property-placeholder location="classpath:config.properties" />

	<!-- 配置字段注入 -->
	<bean id="pValue"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:system.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="properties" ref="pValue" />
	</bean>

	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<constructor-arg type="java.nio.charset.Charset">
						<value>UTF-8</value>
					</constructor-arg>
				</bean>
			</list>
		</property>
	</bean>
</beans>